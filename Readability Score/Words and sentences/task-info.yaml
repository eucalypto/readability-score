type: edu
custom_name: stage2
files:
- name: src/readability/Main.java
  visible: true
  text: |
    package readability;

    public class Main {
        public static void main(String[] args) {
            System.out.print("Hello world!");
        }
    }
  learner_created: false
- name: test/ReadabilityTest.java
  visible: false
  text: |
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.SimpleTestCase;
    import readability.Main;

    import java.util.List;


    public class ReadabilityTest extends StageTest {

        public ReadabilityTest() {
            super(Main.class);
        }

        @Override
        public List<SimpleTestCase> generate() {
            return List.of(
                new SimpleTestCase("This text is simple to read! " +
                    "It has on average less than 10 words per sentence.",
                    "EASY"),

                new SimpleTestCase("This text is hard to read. " +
                    "It contains a lot of sentences as well as a lot of words in each sentence",
                    "HARD"),

                new SimpleTestCase("1 ".repeat(99) + "1. 1. 1.",
                    "HARD"),

                new SimpleTestCase("12, 12 13 14 14 14, " +
                    "12 21 23 89! 75 12, 134 241 123, 123 123 123, 123 123 " +
                    "123? 123, 123 123 123 23 123 213 123 123 123.",
                    "HARD"),

                new SimpleTestCase("12, 12 13 14 14 14, 12 21 23 89! " +
                    "75 12, 241 123, 123 123 123, 123 123 123? 123, " +
                    "123 123 123 23 123 213 123 123 123.",
                    "EASY"),

                new SimpleTestCase( "Readability is the ease with which a " +
                    "reader can understand a written text. In natural language, the " +
                    "readability of text depends on its content and its presentation. " +
                    "Researchers have used various factors to measure readability. And that is it!",
                    "EASY")
            );
        }
    }
  learner_created: false
- name: src/readability/DifficultyChecker.java
  visible: true
  text: |
    package readability;

    public class DifficultyChecker {

        public Difficulty simpleCheck(String input) {
            if (input.length() <= 100)
                return Difficulty.EASY;

            return Difficulty.HARD;
        }
    }
  learner_created: true
- name: src/readability/Difficulty.java
  visible: true
  text: |
    package readability;

    public enum Difficulty {
        EASY, HARD;
    }
  learner_created: true
- name: test/readability/DifficultyCheckerTest.java
  visible: true
  text: |
    package readability;

    import org.junit.jupiter.api.BeforeEach;
    import org.junit.jupiter.api.Test;

    import static org.junit.jupiter.api.Assertions.assertEquals;

    class DifficultyCheckerTest {

        DifficultyChecker checker;

        @BeforeEach
        void setup() {
            checker = new DifficultyChecker();
        }

        @Test
        void simpleCheckLessThan100Chars() {
            var simple = "This is simple to read!";

            var result = checker.simpleCheck(simple);

            assertEquals(Difficulty.EASY, result);
        }

        @Test
        void simpleCheckOver100Chars() {
            var hard = "This text is hard to read. It contains a lot of sentences as well as a lot of words in each sentence.";

            var result = checker.simpleCheck(hard);

            assertEquals(Difficulty.HARD, result);
        }

        @Test
        void simpleCheckExactly100Chars() {
            StringBuilder exact = new StringBuilder();
            for (int i = 0; i < 10; i++) {
                exact.append("1234567890");
            }

            var result = checker.simpleCheck(exact.toString());

            assertEquals(Difficulty.EASY, result);
        }

    }
  learner_created: false
feedback_link: https://hyperskill.org/projects/39/stages/206/implement#comment
status: Unchecked
record: -1
